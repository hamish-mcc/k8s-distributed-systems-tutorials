# This deployment fires up a dummyservice with the name backup-deployment that will be our backup server that we want to see become active when the dummy-deployment becomes unhealthy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backup-deployment
spec:
  selector:
    matchLabels:
      app: backup-deployment
  # For simplicity we'll just fire up a single replica in our load balancer for this service
  replicas: 1
  template:
    metadata:
      labels:
        app: backup-deployment
    spec:
      containers:
        - name: backup-depoyment
          # This is were you point to the image you deployed to the Docker image you deployed to your ACR registry
          image: localhost:5000/dummyservice
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              # The /alive endpoint is the one we will not touch in our test case, as this will trigger a kill and recreate from Kubernetes when this does not return 200
              path: /alive
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              memory: 64Mi
              cpu: 250m
            limits:
              memory: 128Mi
              cpu: 500m
